c
menu_item = MenuItem.create(dish_name: params[:dish_name], franchise_id: current_user.franchises.ids)
current_user.franchises.ids
c
current_user.id
menu_item = MenuItem.create!(dish_name: params[:dish_name], franchise_id: current_user.id)
menu_item = MenuItem.create(dish_name: params[:dish_name], franchise_id: current_user.id)
c
menu_item = franchise.menu_items.create(dish_name: params[:dish_name])
c
menu_item = franchise.menu_items.create(dish_name: params[:dish_name], franchise_id: current_user.id)
c
menu_item = franchise.menu_items.create(dish_name: params[:dish_name], franchise_id: current_user.id)
c
current_user.id
c
menu_item = franchises.menu_items.create(dish_name: params[:dish_name])
c
current_user.franchises.menu_items.creacte(dish_name: params[:dish_name])
menu_item = current_user.franchises.menu_items.create(dish_name: params[:dish_name])
params[:dish_name]
c
current_user.franchises.menu_items.create(dish_name: params[:dish_name])
current_user.franchise.menu_items.create(dish_name: params[:dish_name])
current_user
menu_item
params[:dish_name]
c
menu_item = franchises_url.menu_items.create(dish_name: params[:dish_name])
menu_item = franchise_url.menu_items.create(dish_name: params[:dish_name])
menu_item = franchise.menu_items.create(dish_name: params[:dish_name])
params[:dish_name]
dish_name: params[:dish_name]
c
franchise.present?
c
franchise.exist?
franchise = Franchise.find_by(location: params[:location])
Franchise.find_by(location: params[:location])
params[:location]
c
render json: { error: "Franchise not found" }, status: :not_found unless franchise
franchise = Franchise.find_by(location: params[:location])
Franchise.find_by(location: params[:location])
franchise
params[:location]
c
current_user.role
c
current_user.role
c
current_user
c
Franchise.all.count
Franchise.all
c
current_user.role
c
params[:franchise][:name]
params[:franchise]
params
params[:name]
c
params
 @franchise = Franchise.find(params[:id])
params[:id]
c
params[:location]
params
c
params
c
@franchise = Franchise.create!(name: params[:name], description: params[:description], address: params[:address], location: params[:location], user_id: current_user.id)
@franchise = Franchise.create!(name: params[:name], description: params[:description], address: params[:address], location: params[:location], user_id: current_user)
current_user
@token
@franchise = Franchise.create!(name: params[:name], description: params[:description], address: params[:address], location: params[:location])
Franchise.first
Franchise.first\
Franchise.class
Franchise
 params[:name]
params
c
params[:location]
c
@franchise = Franchise.create(name: params[:name], description: params[:description], address: params[:address], location: params[:location])
c
n
c
@current_user = User.find_for_database_authentication(authentication_token: token)
n
c
request.headers[:token] || params[:token]
@current_user
    @current_user = User.find_for_database_authentication(authentication_token: token)
    token = request.headers[:token] || params[:token]
    byebug
def authenticate_user!
c
@current_user
c
n
c
@current_user
current_user
c
n
c
current_user
c
current_user
c
User.find_for_database_authentication(authentication_token: token)
n
token = request.headers[:token] || params[:token]
c
current_user
c
request.headers[:token] || params[:token]
n
token = request.headers[:token] || params[:token]
c
current_user
request.headers[:token] || params[:token]
c
request.headers[:token] || params[:token]
c
Franchise.create!(name: params[:name],description: params[:description],address: params[:address],location: params[:location], user_id: 9)
User.last
User.all
current_user
Franchise.create!(name: params[:name],description: params[:description],address: params[:address],location: params[:location])
c
